"use strict";(self.webpackChunkknowledge_base=self.webpackChunkknowledge_base||[]).push([[8569],{6192:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var s=t(7556),a=t(4848),o=t(8453);const i={slug:"actor-model",title:"Actor Model",authors:["hinnytsang"],tags:["computer-science"]},r=void 0,c={authorsImageUrls:[void 0]},l=[{value:"Concepts",id:"concepts",level:2}];function d(e){const n={h2:"h2",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:'It is a concurrency model that treats "actors" as the fundamental units of computation.'}),"\n",(0,a.jsx)(n.h2,{id:"concepts",children:"Concepts"}),"\n",(0,a.jsx)(n.p,{children:"Everything is an actor."}),"\n",(0,a.jsx)(n.p,{children:"Actor is computational entity that could response to what it receives, and can concurrently do:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"send a finite number of message to other actors."}),"\n",(0,a.jsx)(n.li,{children:"create a finite number of new actors."}),"\n",(0,a.jsx)(n.li,{children:"designate the behavior to be used for the next message it receives."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"And the are no assumption of sequencial and parallel."}),"\n",(0,a.jsx)(n.p,{children:"More rules:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"actor does not share state with anybody else, but can have its own state."}),"\n",(0,a.jsx)(n.li,{children:"actor can only communicate with other actors by sending and receiving messages."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},7556:e=>{e.exports=JSON.parse('{"permalink":"/knowledge-base/actor-model","source":"@site/blog/2025-08-14-actor-model.md","title":"Actor Model","description":"It is a concurrency model that treats \\"actors\\" as the fundamental units of computation.","date":"2025-08-14T00:00:00.000Z","tags":[{"inline":false,"label":"Computer Science","permalink":"/knowledge-base/tags/computer-science","description":"Computer Science Concepts and Techniques"}],"readingTime":0.54,"hasTruncateMarker":true,"authors":[{"name":"Hinny Tsang","title":"Data Scientist @ Pollock Asset Management","url":"https://github.com/HinnyTsang","page":{"permalink":"/knowledge-base/authors/hinnytsang"},"socials":{"linkedin":"https://www.linkedin.com/in/HinnyTsang/","github":"https://github.com/HinnyTsang"},"imageURL":"https://github.com/HinnyTsang.png","key":"hinnytsang"}],"frontMatter":{"slug":"actor-model","title":"Actor Model","authors":["hinnytsang"],"tags":["computer-science"]},"unlisted":false,"prevItem":{"title":"Database Design Principles","permalink":"/knowledge-base/database-design-principles"},"nextItem":{"title":"Market Data","permalink":"/knowledge-base/market-data"}}')},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>r});var s=t(6540);const a={},o=s.createContext(a);function i(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);