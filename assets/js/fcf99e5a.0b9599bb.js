"use strict";(self.webpackChunkknowledge_base=self.webpackChunkknowledge_base||[]).push([[7669],{1787:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>o});var t=i(6223),a=i(4848),l=i(8453);const s={slug:"database-design-principles",title:"Database Design Principles",authors:["hinnytsang"],tags:["data-engineering"]},r=void 0,d={authorsImageUrls:[void 0]},o=[{value:"Data Integrity",id:"data-integrity",level:2},{value:"Normalization",id:"normalization",level:2},{value:"Scalability",id:"scalability",level:2},{value:"Performance Optimization",id:"performance-optimization",level:2},{value:"Flexibility and Extensibility",id:"flexibility-and-extensibility",level:2},{value:"Security",id:"security",level:2},{value:"Atomicity",id:"atomicity",level:2},{value:"Referential Integrity",id:"referential-integrity",level:2},{value:"Naming Convention",id:"naming-convention",level:2},{value:"Documentation",id:"documentation",level:2}];function c(n){const e={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.p,{children:"Data base design principle"}),"\n",(0,a.jsx)(e.h2,{id:"data-integrity",children:"Data Integrity"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Accurate and consistent data is maintained throughout the database."}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"normalization",children:"Normalization"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Data is organized to reduce redundancy and improve data integrity."}),"\n"]}),"\n",(0,a.jsx)(e.p,{children:"Normal Forms:"}),"\n",(0,a.jsx)(e.p,{children:"Denote functional dependency for table A, B, C, D, E, F, G"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"A, B -> C, D, E, F, G\nA -> C\nE -> F\n"})}),"\n",(0,a.jsx)(e.p,{children:"Etc."}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:"1NF: Atomic"}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:"2NF: No Partial Dependency"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Any feature cannot be determined by only part of the primary key."}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:"3NF: No Transitive Dependency"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"If A -> B and B -> C, then A -> C should not hold (transitive dependency)"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:"BCNF: No Non-Trivial Functional Dependency"}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:"4NF: No Multi-Valued Dependency"}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:"5NF: No Join Dependency"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"scalability",children:"Scalability"}),"\n",(0,a.jsx)(e.h2,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,a.jsx)(e.h2,{id:"flexibility-and-extensibility",children:"Flexibility and Extensibility"}),"\n",(0,a.jsx)(e.h2,{id:"security",children:"Security"}),"\n",(0,a.jsx)(e.h2,{id:"atomicity",children:"Atomicity"}),"\n",(0,a.jsx)(e.h2,{id:"referential-integrity",children:"Referential Integrity"}),"\n",(0,a.jsx)(e.h2,{id:"naming-convention",children:"Naming Convention"}),"\n",(0,a.jsx)(e.h2,{id:"documentation",children:"Documentation"}),"\n",(0,a.jsx)(e.h1,{id:"entity-relationship-model",children:"Entity-Relationship Model"}),"\n",(0,a.jsx)(e.h1,{id:"dimensional-data-model",children:"Dimensional Data Model"}),"\n",(0,a.jsx)(e.p,{children:"Used in data warehouse design. Comprised of facts and dimension table."}),"\n",(0,a.jsxs)(e.p,{children:["Goal is to enable efficient querying (",(0,a.jsx)(e.code,{children:"SELECT"})," operation)."]}),"\n",(0,a.jsx)(e.p,{children:"Used in a lot of Online Analytical Processing (OLAP) systems (e.g. Cognos, Tableau)."})]})}function h(n={}){const{wrapper:e}={...(0,l.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(c,{...n})}):c(n)}},6223:n=>{n.exports=JSON.parse('{"permalink":"/knowledge-base/database-design-principles","source":"@site/blog/2025-08-16-database-design-principles.md","title":"Database Design Principles","description":"Data base design principle","date":"2025-08-16T00:00:00.000Z","tags":[{"inline":false,"label":"Data Engineering","permalink":"/knowledge-base/tags/data-engineering","description":"Data Engineering Concepts and Techniques"}],"readingTime":0.92,"hasTruncateMarker":true,"authors":[{"name":"Hinny Tsang","title":"Data Scientist @ Pollock Asset Management","url":"https://github.com/HinnyTsang","page":{"permalink":"/knowledge-base/authors/hinnytsang"},"socials":{"linkedin":"https://www.linkedin.com/in/HinnyTsang/","github":"https://github.com/HinnyTsang"},"imageURL":"https://github.com/HinnyTsang.png","key":"hinnytsang"}],"frontMatter":{"slug":"database-design-principles","title":"Database Design Principles","authors":["hinnytsang"],"tags":["data-engineering"]},"unlisted":false,"nextItem":{"title":"Actor Model","permalink":"/knowledge-base/actor-model"}}')},8453:(n,e,i)=>{i.d(e,{R:()=>s,x:()=>r});var t=i(6540);const a={},l=t.createContext(a);function s(n){const e=t.useContext(l);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:s(n.components),t.createElement(l.Provider,{value:e},n.children)}}}]);